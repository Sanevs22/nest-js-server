import { Injectable } from '@nestjs/common';
import { Card } from './dto/card.dto';

@Injectable()
export class AppService {

  data: Card[] = [
    {
      id: '1',
      title: 'Клиффхэнгер',
      comment: 'Прием, который создатели фильмов и сериалов используют для того, чтобы заинтриговать зрителей: в тот момент, когда главному герою приходится сталкиваться с последствиями своего или же чужого выбора, повествование резко обрывается и его судьба остается неизвестной до появления следующей серии либо сезона. Классический пример — окончание любого из сезонов «Шерлока», которое оставляет зрителя в неведении и томительном ожидании.',
    },
    {
      id: '2',
      title: 'Макгаффин',
      comment: 'Этим словом, чем-то напоминающим шотландскую фамилию, называют предмет, вокруг которого строится сюжет фильма. К примеру, это гипс с драгоценностями в «Бриллиантовой руке» или знаменитый чемоданчик в «Криминальном чтиве». Как и многое в современном кино, макгаффин придумал Альфред Хичкок, который построил сюжет одного из своих фильмов вокруг схемы самолетного мотора. «Неважно, что это за вещь, — говорил режиссер, — главное, что все хотят ею обладать».',
    },
    {
      id: '3',
      title: 'Твист',
      comment: 'Лучше всего этот термин иллюстрирует известный мем под названием «Вот это поворот!». Яркие примеры такого приема — фильмы «Бойцовский клуб» и «Остров проклятых», когда события последних минут переворачивают все происходящее с ног на голову. Никогда и никому не рассказывайте о сюжетных твистах, советуя какой-либо фильм, иначе получится жирный спойлер.',
    },
    {
      id: '4',
      title: 'Килл-офф',
      comment: 'Если вдруг один из основных персонажей исчезает из сюжетной линии, но сам фильм или сериал (что чаще) продолжается, то говорят о таком приеме, как «килл-офф». Происходит это по разным причинам: отказ актера от продолжения съемок, низкий рейтинг персонажа или произведения в целом и даже смерть актера. Ярчайший пример килл-оффа — смерть героя Кевина Спейси в сериале «Карточный домик».',
    }
  ]

  getAll(): Card[] {
    return this.data;
  }

  create(purchase: Card ){
    purchase.id = String( Number(this.data[this.data.length-1].id ) + 1) 
    this.data.push(purchase);
  }
  
  update( purchase: Card, id: string) {
    if(this.data.length >= Number(id)-1 ) {
      this.data[Number(id)-1] = purchase;
    } else {
      return "db not item!"
    }
  }

  remove( id: string ){
      for(let i in this.data){
        if(this.data[i].id === id) {
          this.data.splice(Number(i) ,1);
        }
      }
  }
}
